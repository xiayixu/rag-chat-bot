[
    {
        "page_content": "Configuration Management\n\n\n\n\n\n\n\nThe page Configuration Management is about Product Team, System Management, and Security.\n\nConfiguration Management\nOriginal URL:  Configuration Management\n\n Ansible installation:\n\n\n\npython3 -m pip install --user ansible\n\n\n\n\n\n do appropriate configuration at ~/.ssh/config\n\n\n /etc/ansible/hosts\n\n\n\n[prod]\nlambda1\ncube1\ninference1\nbackbone1\nstorage1\ncrawler1\nalpha1\n\n[uat]\nlambda2\ncube2\ninference2\nbackbone2\nstorage2\ncrawler2\nalpha2\n\n[dev]\ntitan\nlambda3\ncube3\ninference3\ninference4\ninference5\ninference6\nbackbone3\nbackbone5\nbackbone6\nbackbone7\nbackbone8\nbackbone9\nbackbone10\ncrawler3\ncrawler4\ncrawler5\nalpha3\nalpha4\nalpha5\nalpha6\nalpha7\nalpha8\nalpha9\nalpha10\nalpha11\nalpha12\n\n\n\n\n\n Test accessibility of all servers from Backbone3:\n\n\n\nansible all -m ping\n\n\n\n\n\n check linux version of all servers:\n\n\n\nansible all -a  \"lsb_release -a\"\n\n\n\n\n\n Reference:\n \n  https://docs.ansible.com/ansible/latest/getting_started/index.html",
        "metadata": {
            "source_data": "/data2/yixu/confluence_html_data/id_251494453_title_Configuration Management.html",
            "page_id": "251494453"
        }
    },
    {
        "page_content": "168.1.166, Port: 8080, Link: , Expose: , Subdomain: https://sso-uat.ayr.ai/, Deploy Directory: , 当前访问不了: , 但是要保留: \nService Name: MPP dev Daniel, Machine: Alpha12, IP: 192.168.1.196, Port: 3000/8001, Link: , Expose: , Subdomain: https://mpp-alpha12.ayr.ai/, Deploy Directory: , 当前访问不了: , 但是要保留: \nService Name: Monitoring tool Daniel, Machine: Alpha12, IP: 192.168.1.196, Port: 9000, Link: , Expose: , Subdomain: https://sentry-alpha12.ayr.ai/, Deploy Directory: , 当前访问不了: , 但是要保留: \nService Name: LLM QA Demo - Jessica, Machine: Backbone8, IP: 192.168.1.152, Port: 4998, Link: , Expose: , Subdomain: https://llm-qa.ayr.ai/, Deploy Directory: , 当前访问不了: , 但是要保留: \nService Name: LLM QA Dev - Jessica, Machine: Backbone3, IP: 192.168.1.149, Port: 4090, Link: , Expose: , Subdomain: https://llm-qa-dev.ayr.ai/, Deploy Directory: , 当前访问不了: , 但是要保留: \n\n\n\n\n China\n\n\n三证一卡: sunshine logo classifier, Cube4: Cube4, 117.78.32.167: 117.78.32.167, 7100: 7100, https://singularitysystems.com.cn:7100/ocr/smart_ocr/: https://singularitysystems.com.cn:7100/ocr/logo_ocr/, : \n三证一卡: sunshine logo classifier Batch, Cube4: Cube4, 117.78.32.167: 117.78.32.167, 7100: 7100, https://singularitysystems.com.cn:7100/ocr/smart_ocr/: https://singularitysystems.com.cn:7100/ocr/logo_ocr_batch/, : \n三证一卡: Invoice, Cube4: Cube4, 117.78.32.167: 117.78.32.167, 7100: 7100, https://singularitysystems.com.cn:7100/ocr/smart_ocr/: http://singularitysystems.com.cn:7100/image/text_detection/inference/, : \n三证一卡: NLP-Contract, Cube4: Cube4, 117.78.32.167: 117.78.32.167, 7100: 7100, https://singularitysystems.com",
        "metadata": {
            "source_data": "/data2/yixu/confluence_html_data/id_133857283_title_Port Management.html",
            "page_id": "133857283"
        }
    },
    {
        "page_content": "* lib/billboard – This is the path where the submodule repository will be added to the main repository.lib/billboard – This is the path where the submodule repository will be added to the main repository.\n  \n\n\n\n Edit\n\n\n How to Test CPU Memory\n\n\n allocate 62839MB memory to test it for 5 times\n\n\n\nsudo memtester 62839 5\n\n\n\n\n Edit\n\n\n Convert a 1D Numpy array to a raw of a 2D Numpy array\n\n\n\ntwo_dimension_numpy = np.reshape(one_dimension_numpy, (1, -1))  # 1 means one row, -1 means use the number of columns from one_dimension_numpy\n\n\n\n\n Edit\n\n\n Access Cube4 Without Password\n\n\n On your local Machine/Server, run the following commands.\n\n\n Edit\n\n\n 本地跑生成rsakey\n\n\n\nssh-keygen -t rsa\n\n\n\n\n You do not have to enter any password. (use empty password)\n\n\n Edit\n\n\n pub.key放到远程机器上\n\n\n\nssh-copy-id -i .ssh/id_rsa.pub -p 6000 tianhao@117.78.32.167\n\n\n\n\n change tianhao to your own user name.\n\n\n Edit\n\n\n Setup no password ssh access to Singularity Servers\n\n\n\n  https://linuxhandbook.com/add-ssh-public-key-to-server/\n \n\n\n\n  remote_ssh_access.sh\n \n\n\n ==== To Test Whether It works ====\n\n\n\nssh -p 6000 tianhao@117.78.32.167\n\n\n\n\n change tianhao to your own user name. if you do not have to enter any password, then you can directly login to cube4, it means the setting above is successful.\n\n\n Edit\n\n\n set Termius\n\n\n\n\n   in the password field, select 'Keys →'\n  \n\n\n\n\n\n\n   Select '+ KeY'\n  \n\n\n\n\n\n\n   Give a label such as 'mysshkey'. select 'File →'\n  \n\n\n\n\n\n\n   Select 'id_rsa' file from your user's .ssh folder\n  \n\n\n\n\n\n\n Edit\n\n\n Disable Ubuntu Automatic Updates from Command Line\n\n\n Edit /etc/apt/apt.conf",
        "metadata": {
            "source_data": "/data2/yixu/confluence_html_data/id_327090238_title_Linux Commands Collection.html",
            "page_id": "327090238"
        }
    },
    {
        "page_content": "168.1.12, Port: 9090, Link: http://192.168.1.12:9090, Expose: , Subdomain: https://minio-dev.ayr.ai/, Deploy Directory: , 当前访问不了: , 但是要保留: \nService Name: Minio dev api, Machine: alpha1, IP: 192.168.1.12, Port: 9000, Link: http://192.168.1.12:9000, Expose: , Subdomain: https://minio-dev-api.ayr.ai/, Deploy Directory: , 当前访问不了: , 但是要保留: \nService Name: Singuparser-dev, Machine: alpha1, IP: 192.168.1.12, Port: 9081, Link: , Expose: , Subdomain: https://singuparser-dev.singularitysystems.com/#/tasks, Deploy Directory: , 当前访问不了: x, 但是要保留: \nService Name: Singuflow-dev, Machine: alpha1, IP: 192.168.1.12, Port: 8005, Link: , Expose: , Subdomain: https://singuflow-dev.singularitysystems.com/, Deploy Directory: , 当前访问不了: x, 但是要保留: \nService Name: OPP-dev, Machine: alpha1, IP: 192.168.1.12, Port: 9082, Link: , Expose: , Subdomain: https://singuocr-dev.singularitysystems.com/, Deploy Directory: , 当前访问不了: x, 但是要保留: \nService Name: DPP-dev, Machine: alpha1, IP: 192.168.1.12, Port: 7060, Link: , Expose: , Subdomain: https://dpp-dev.singularitysystems.com/, Deploy Directory: , 当前访问不了: x, 但是要保留: \nService Name: Modelhub-dev, Machine: alpha1, IP: 192.168.1.12, Port: 9080, Link: , Expose: , Subdomain: https://modelhub-dev.singularitysystems.com/, Deploy Directory: , 当前访问不了: x, 但是要保留: \nService Name: MPP dev, Machine: alpha1, IP: 192.168.1.12, Port: 5000, Link: , Expose: , Subdomain: https://mpp-dev.singularitysystems.com, Deploy Directory: , 当前访问不了: x, 但是要保留: \nService Name: SinguTXT dev, Machine: Inference2, IP: 192.168.1.247, Port: 7033, Link: https://server.singularitysystems",
        "metadata": {
            "source_data": "/data2/yixu/confluence_html_data/id_133857283_title_Port Management.html",
            "page_id": "133857283"
        }
    },
    {
        "page_content": "Setup AYR-AI Github\n\n\n\n\n\n\n\nThe page Setup AYR-AI Github is about Product Team, and Tools.\n\nSetup AYR-AI Github\nOriginal URL:  Setup AYR-AI Github\n\n\n\n\n\n\n    Create New SSH Key Pair\n   \n\n\n\n    Add New SSH Public Key to Github\n   \n\n\n\n    Create Personal Token in Github\n   \n\n\n\n    Add Github User to Pycharm\n   \n\n\n\n    Assign Github User for Specific Project in Pycharm\n   \n\n\n\n\n Create New SSH Key Pair\n\n\n\n  https://docs.github.com/en/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent#generating-a-new-ssh-key\n \n\n\n this will create a new ssh key pair in addition to your existing ssh key pair\n\n\n\n\n   Open Terminal.\n  \n\n\n\n\n    ssh-keygen -t ed25519 -C \"your_email@example.com\"\n   \n\n\n\n\n   use the default file location “~/.ssh/id_ed25519”\n  \n\n\n\n   enter empty\n   \n    passphrase\n   \n\n\n\n\n   there will be two files created “~/.ssh/id_ed25519“ and “\n   \n    ~/.ssh/id_ed25519.pub\n   \n   “\n  \n\n\n\n   add the new private key into the ssh keychain:\n  \n\n\n\n\n      ssh-add --apple-use-keychain ~/.ssh/id_ed25519\n     \n\n\n\n\n\n      ssh-add --apple-use-keychain ~/.ssh/id_rsa\n     \n\n\n\n\n     list currently supported ssh keys:\n     \n      ssh-add -L\n     \n\n\n\n\n\n\n Add New SSH Public Key to Github\n\n\n\n\n   Log in to your GitHub account at\n   \n\n     https://github.com\n    \n\n   .\n  \n\n\n\n   Click on your profile picture in the top-right corner of the page and select \"Settings\" from the dropdown menu.\n  \n\n\n\n   In the left sidebar of the Settings page, click on \"SSH and GPG keys\".\n  \n\n\n\n   Click on the \"New SSH key\" button",
        "metadata": {
            "source_data": "/data2/yixu/confluence_html_data/id_369033293_title_Setup AYR-AI Github.html",
            "page_id": "369033293"
        }
    },
    {
        "page_content": "pth/' ` ; done\n\n\n\n\n ===== Remove space from filename =====\n\n\n\nls | rename 's/ //g'\n\n\n\n\n ===== 将文件分割成每个字符一行，并去掉重复的字符的程序 =====\n\n\n\nsed -e 's/./&\\n/g' input | sort | uniq> output\n\n\n\n\n input 为输入的字符文件，output为清理好的字符文件\n\n\n Edit\n\n\n 中文文件去掉重复行\n\n\n GNU system with UTF-8 locales, sort -u or sort | uniq didn't give you unique lines, but the first from sequence of lines which sort the same in current locale. Changing locale to C force the sorting order based on the byte values:\n\n\n\nLC_ALL=C sort -u input> output\n\n\n\n\n\n  unique-sorting-redirect-output-to-the-same-file\n \n\n\n Edit\n\n\n 测试硬盘速度\n\n\n Timing buffered disk reads: is the real disk read speed\n\n\n\nsudo hdparm -tT /dev/sda\n\n\n\n\n Edit\n\n\n Bootable USB readable\n\n\n\nsudo hdparm -r0 /dev/sde\n\n\n\n\n Edit\n\n\n Port Forwarding\n\n\n in chrome browser\n\n\n\n192.168.1.1\n\n\n\n\n\n\n\n Edit\n\n\n SSH Server\n\n\n\nsudo apt install openssh-server\n\n\n\n\n change each individual machhine's ssh server port number for example, Titan ssh port number should be changed to 6005 since its port forward is 6005\n\n\n\n/etc/ssh/sshd_config\nPort 6005\n\n\n\n\n Enable port 6005 on lambda1\n\n\n\nsudo ufw allow 6005/tcp\n\n\n\n\n Edit\n\n\n Restart ssh server\n\n\n\nsudo systemctl stop ssh\nsudo systemctl start ssh\n\n\n\n\n Check the ssh server is running on port 6005\n\n\n\nsudo systemctl status ssh\n\n\n\n\n\n\n\n you should see the message like\n\n\n Edit\n\n\n Setup ssh public key access to remote server\n\n\n Copy your local machine public key into authorized_keys file, each public key is one line. and copy this authorized_keys file to the ~/.ssh dir of all remote server(s) those you want to access",
        "metadata": {
            "source_data": "/data2/yixu/confluence_html_data/id_327090238_title_Linux Commands Collection.html",
            "page_id": "327090238"
        }
    },
    {
        "page_content": "/ngrok tcp 22 -remote-addr=\n \n  1.tcp.ngrok.io\n \n : 25604'\n\n\n Restart Ngrok on Lambda1 ./ngrok authtoken 1RNcP2FORvN8fjq2m1jo5w2hBQp_4g66rEqrmeBQkCoB3eeHi tmux new-session -d -s ssh './ngrok tcp 22 -remote-addr=\n \n  1.tcp.ngrok.io\n \n : 29255'\n\n\n Edit\n\n\n Internal Linux Server Commands\n\n\n ngrok: rok\n\n\n Mount disk: sudo mount /dev/sda1 /storage/\n\n\n Restart: shutdown -P\n\n\n Restart Ngrok on Titan\n\n\n ./ngrok authtoken kdr4hwpAYXnoDLJpxKb_9pwwJKHSNiEtjMJ2pUgr tmux new-session -d -s ssh './ngrok tcp 22 -remote-addr=\n \n  1.tcp.ngrok.io:26815\n \n '\n\n\n Restart Ngrok on Lambda1 ./ngrok authtoken kdr4hwpAYXnoDLJpxKb_9pwwJKHSNiEtjMJ2pUgr tmux new-session -d -s ssh './ngrok tcp 22 -remote-addr=\n \n  1.tcp.ngrok.io\n \n : 25604'\n\n\n Restart Ngrok on Lambda1 ./ngrok authtoken 1RNcP2FORvN8fjq2m1jo5w2hBQp_4g66rEqrmeBQkCoB3eeHi tmux new-session -d -s ssh './ngrok tcp 22 -remote-addr=\n \n  1.tcp.ngrok.io\n \n : 29255'\n\n\n Edit\n\n\n Access Servers\n\n\n Titan:\n\n\n\nscp -r -P 26815 [localFile] [yourUserName]@1.tcp.ngrok.io:/storage/[yourOwnDir]\n\n\n\n\n Lambda 01:\n\n\n\nscp -r -P 25604 [localFile] [yourUserName]@1.tcp.ngrok.io:[yourOwnDir]\n\n\n\n\n Lambda 02:\n\n\n\nscp -r -P 29255 [localFile] [yourUserName]@1.tcp.ngrok.io:[yourOwnDir]\n\n\n\n\n Lambda 03\n\n\n\nscp -r -P 29735 [localFile] [yourUserName]@1.tcp.ngrok.io:[yourOwnDir]\n\n\n\n\n\nfrom our domain name and port now:\nfor example:\n`ssh username@server.singularitysystems.com -p6001` to access lambda1\nserver domain is:\nserver.singularitysystems",
        "metadata": {
            "source_data": "/data2/yixu/confluence_html_data/id_327090238_title_Linux Commands Collection.html",
            "page_id": "327090238"
        }
    },
    {
        "page_content": "Load New Models on Alpha6\n\n\n\n\n\n\n\nThe page Load New Models on Alpha6 is about Singularity_CN Home, and SinguParser.\n\nLoad New Models on Alpha6\nOriginal URL:  Load New Models on Alpha6\n\n\n\n   forward 8088 to local using ssh\n  \n\n\n\n   in alpha1, create directory in\n   \n    /fast1/singuParser_models/\n   \n   , such as\n   \n    goldman_ocr_tianhao\n   \n\n\n\n\n   in the created directory, copy\n   \n    config.py\n   \n   from a ML engineer path\n  \n\n\n\n   in the created directory, create new folder\n   \n    trained_models\n   \n\n\n\n\n   copy the model to the folder\n   \n    trained_models\n   \n\n\n\n\n   register and load model: in the\n   \n    http://localhost:8088/register\n   \n   , register the mode\n  \n\n\n\n ( e.g. add the following content, then it will return a key number\n\n\n\n  { \"config_path\": \"/fast1/singuParser_models/goldman_ocr_tianhao\", \"model_weights_path\":\"/fast1/singuParser_models/goldman_ocr_tianhao/trained_models/ocr-enzh_gs_2022-04-03_0016_82.041.pth\",\n \n\n\n\n  \"model_type\": \"ocr\",\n \n\n\n\n  \"language\":\"goldman_tianhao\" }\n \n\n\n )\n\n\n in the\n \n  http://localhost:8088/load\n \n , load the model\n\n\n (e.g. add the following content\n\n\n\n  { “key“: <int>,\n \n\n\n\n  “gpu“: “1“\n \n\n\n\n  }\n \n\n\n )\n\n\n 7. in the\n \n  /fast1/SinguParser/image_platform/django_web/singuparser/config.py\n \n add to the\n\n\n model_keys, only change the value for the updated model key and keep others same\n\n\n 8. test use postman\n\n\n\n\n Unload a Model\n\n\n\n\n   go to localhost:8088/clear/  and insert a dictionary. The key would be the model’s key needed to be unloaded.\n  \n\n\n\n {\n \n  \"model_key\": (int) MLModel key\n \n }",
        "metadata": {
            "source_data": "/data2/yixu/confluence_html_data/id_453912024_title_Load New Models on Alpha6.html",
            "page_id": "453912024"
        }
    },
    {
        "page_content": "/ngrok tcp 22 -remote-addr=\n \n  1.tcp.ngrok.io\n \n : 25604'\n\n\n Restart Ngrok on Lambda1 ./ngrok authtoken 1RNcP2FORvN8fjq2m1jo5w2hBQp_4g66rEqrmeBQkCoB3eeHi tmux new-session -d -s ssh './ngrok tcp 22 -remote-addr=\n \n  1.tcp.ngrok.io\n \n : 29255'\n\n\n Edit\n\n\n Internal Linux Server Commands\n\n\n ngrok: rok\n\n\n Mount disk: sudo mount /dev/sda1 /storage/\n\n\n Restart: shutdown -P\n\n\n Restart Ngrok on Titan\n\n\n ./ngrok authtoken kdr4hwpAYXnoDLJpxKb_9pwwJKHSNiEtjMJ2pUgr tmux new-session -d -s ssh './ngrok tcp 22 -remote-addr=\n \n  1.tcp.ngrok.io:26815\n \n '\n\n\n Restart Ngrok on Lambda1 ./ngrok authtoken kdr4hwpAYXnoDLJpxKb_9pwwJKHSNiEtjMJ2pUgr tmux new-session -d -s ssh './ngrok tcp 22 -remote-addr=\n \n  1.tcp.ngrok.io\n \n : 25604'\n\n\n Restart Ngrok on Lambda1 ./ngrok authtoken 1RNcP2FORvN8fjq2m1jo5w2hBQp_4g66rEqrmeBQkCoB3eeHi tmux new-session -d -s ssh './ngrok tcp 22 -remote-addr=\n \n  1.tcp.ngrok.io\n \n : 29255'\n\n\n Edit\n\n\n Internal Linux Server Commands\n\n\n ngrok: rok\n\n\n Mount disk: sudo mount /dev/sda1 /storage/\n\n\n Restart: shutdown -P\n\n\n Restart Ngrok on Titan\n\n\n ./ngrok authtoken kdr4hwpAYXnoDLJpxKb_9pwwJKHSNiEtjMJ2pUgr tmux new-session -d -s ssh './ngrok tcp 22 -remote-addr=\n \n  1.tcp.ngrok.io:26815\n \n '\n\n\n Restart Ngrok on Lambda1 ./ngrok authtoken kdr4hwpAYXnoDLJpxKb_9pwwJKHSNiEtjMJ2pUgr tmux new-session -d -s ssh './ngrok tcp 22 -remote-addr=\n \n  1.tcp.ngrok.io\n \n : 25604'\n\n\n Restart Ngrok on Lambda1 ./ngrok authtoken 1RNcP2FORvN8fjq2m1jo5w2hBQp_4g66rEqrmeBQkCoB3eeHi tmux new-session -d -s ssh './ngrok tcp 22 -remote-addr=\n \n  1.tcp.ngrok",
        "metadata": {
            "source_data": "/data2/yixu/confluence_html_data/id_327090238_title_Linux Commands Collection.html",
            "page_id": "327090238"
        }
    },
    {
        "page_content": "Load New Models on Alpha6\n\n\n\n\n\n\n\nThe page Load New Models on Alpha6 is about Product Team, and SinguParser.\n\nLoad New Models on Alpha6\nOriginal URL:  Load New Models on Alpha6\n\n\n\n   forward 8088 to local using ssh\n  \n\n\n\n   in alpha1, create directory in\n   \n    /fast1/singuParser_models/\n   \n   , such as\n   \n    goldman_ocr_tianhao\n   \n\n\n\n\n   in the created directory, copy\n   \n    config.py\n   \n   from a ML engineer path\n  \n\n\n\n   in the created directory, create new folder\n   \n    trained_models\n   \n\n\n\n\n   copy the model to the folder\n   \n    trained_models\n   \n\n\n\n\n   register and load model: in the\n   \n    http://localhost:8088/register\n   \n   , register the mode\n  \n\n\n\n ( e.g. add the following content, then it will return a key number\n\n\n\n  { \"config_path\": \"/fast1/singuParser_models/goldman_ocr_tianhao\", \"model_weights_path\":\"/fast1/singuParser_models/goldman_ocr_tianhao/trained_models/ocr-enzh_gs_2022-04-03_0016_82.041.pth\",\n \n\n\n\n  \"model_type\": \"ocr\",\n \n\n\n\n  \"language\":\"goldman_tianhao\" }\n \n\n\n )\n\n\n in the\n \n  http://localhost:8088/load\n \n , load the model\n\n\n (e.g. add the following content\n\n\n\n  { “key“: <int>,\n \n\n\n\n  “gpu“: “1“\n \n\n\n\n  }\n \n\n\n )\n\n\n 7. in the\n \n  /fast1/SinguParser/image_platform/django_web/singuparser/config.py\n \n add to the\n\n\n model_keys, only change the value for the updated model key and keep others same\n\n\n 8. test use postman\n\n\n\n\n Unload a Model\n\n\n\n\n   go to localhost:8088/clear/  and insert a dictionary. The key would be the model’s key needed to be unloaded.\n  \n\n\n\n {\n \n  \"model_key\": (int) MLModel key\n \n }",
        "metadata": {
            "source_data": "/data2/yixu/confluence_html_data/id_40599557_title_Load New Models on Alpha6.html",
            "page_id": "40599557"
        }
    }
]